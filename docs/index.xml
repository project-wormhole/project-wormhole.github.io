<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Specification on</title><link>https://www.wormholeim.org/docs/</link><description>Recent content in Specification on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://www.wormholeim.org/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://www.wormholeim.org/docs/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://www.wormholeim.org/docs/introduction/</guid><description>How does it work? Intra and Inter Messaging Only inter-app messages are go through wormhole server, intra messages will have no difference. We provide client SDKs which help you to integrate with least effort.
Messaging Restful APIs is provided to register user, create chats and complete with E2EE etc. Websocket provides efficient messaging interface that avoids the overheads of negotiation and reduce the latency. WebRTC is introduced to secure real-time voice and video calls over the web.</description></item><item><title>Specification</title><link>https://www.wormholeim.org/docs/specification/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://www.wormholeim.org/docs/specification/</guid><description>Wormhole server APIs are forked from Signal Server. Wormhole modified various features to support cross App communication.
Architecture All apps send messages to their original IM server if their client tries to communicate with users in the same app. However, if clients try to send messages to another App, the messages will be delivered to the Wormhole server and then passed to the intended recipients via Wormhole SDKs. All messages are encrypted on the client side to make sure the Wormhole canâ€™t see its content.</description></item></channel></rss>