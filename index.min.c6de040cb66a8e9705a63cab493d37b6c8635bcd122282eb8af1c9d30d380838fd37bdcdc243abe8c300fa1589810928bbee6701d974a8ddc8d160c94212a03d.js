var suggestions=document.getElementById('suggestions');var userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(e){if(e.keyCode===191){e.preventDefault();userinput.focus();}
if(e.keyCode===27){userinput.blur();suggestions.classList.add('d-none');}}
document.addEventListener('click',function(event){var isClickInsideElement=suggestions.contains(event.target);if(!isClickInsideElement){suggestions.classList.add('d-none');}});document.addEventListener('keydown',suggestionFocus);function suggestionFocus(e){const focusableSuggestions=suggestions.querySelectorAll('a');const focusable=[...focusableSuggestions];const index=focusable.indexOf(document.activeElement);let nextIndex=0;if(e.keyCode===38){e.preventDefault();nextIndex=index>0?index-1:0;focusableSuggestions[nextIndex].focus();}
else if(e.keyCode===40){e.preventDefault();nextIndex=index+1<focusable.length?index+1:index;focusableSuggestions[nextIndex].focus();}}
(function(){var index=new FlexSearch({preset:'score',cache:true,doc:{id:'id',field:['title','description','content',],store:['href','title','description',],},});var docs=[{id:0,href:"https://www.wormholeim.org/docs/introduction/",title:"Introduction",description:"Wormhole is an Open Source project aimed to give an Open Standard, allowing people on different apps to communicate with each other through a secure, fast, and reliable protocol.",content:"\u003ch2 id=\"how-does-it-work\"\u003eHow does it work?\u003c/h2\u003e\n\u003ch3 id=\"intra-and-inter-messaging\"\u003eIntra and Inter Messaging\u003c/h3\u003e\n\u003cp\u003eOnly inter-app messages go through wormhole server, intra messages will have no difference. We provide client SDKs which help you to integrate with the least effort.\u003c/p\u003e\n\u003ch3 id=\"messaging\"\u003eMessaging\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRestful APIs are provided to register users, create chats and complete with E2EE etc.\u003c/li\u003e\n\u003cli\u003eWebsocket provides efficient messaging interface that avoids the overheads of negotiation and reduces the latency.\u003c/li\u003e\n\u003cli\u003eWebRTC is introduced to secure real-time voice and video calls over the web.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"security\"\u003eSecurity\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDouble Ratchet algorithm is used to exchange encrypted messages based on a shared secret key\u003c/li\u003e\n\u003cli\u003eX3DH key agreement protocol is integrated and used as the Double Ratchet\u0026rsquo;s initial root key\u003c/li\u003e\n\u003cli\u003eSesame algorithm for managing message encryption sessions in an asynchronous and multi-device setting\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"privacy\"\u003ePrivacy\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eProfile and Picture names and pictures let people know who is messaging them. Wormhole service has no knowledge of them since they are end-to-end encrypted\u003c/li\u003e\n\u003cli\u003eMessages are protected by E2EE that wormhole and third party does not have a means to decrypt them. Only senders and intended recipients can read the messages.\u003c/li\u003e\n\u003cli\u003eMessage Requests give you the option to block, delete, and accept messages from somebody trying to get in touch with you.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"open-source-open-standard\"\u003eOpen source, open standard\u003c/h3\u003e\n\u003cp\u003eWormhole is based on the Signal project and plan to provide\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOpen Source\n\u003cul\u003e\n\u003cli\u003eClient SDKs ( Apache License)\u003c/li\u003e\n\u003cli\u003eClient reference implementation ( Android, iOS)\u003c/li\u003e\n\u003cli\u003eApplication Server\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen Standard\n\u003cul\u003e\n\u003cli\u003eInter-service communication protocol\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eStandalone service\n\u003cul\u003e\n\u003cli\u003eProduction grad inter-service messaging service\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:1,href:"https://www.wormholeim.org/docs/client-server-api/",title:"Client-Server API",description:"Wormhole Client-Server API",content:"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eWormhole\u003c/code\u003e server APIs are forked from \u003ca href=\"https://github.com/matrix-org/synapse\"\u003eSynapse Server\u003c/a\u003e. We keep most of the APIs and describe the changes below.\u003c/p\u003e\n\u003cp\u003eMatrix synapse as it describes, is an ambitious new ecosystem for open federated Instant Messaging. However, we believe the need for server-side integration or modification is such a pain. We prefer to provide centralized Chat Server to reduce overhead. For example, if an app already has its own IM service, thereâ€™s nothing related to Wormhole. However, if your users want to communicate to other apps, messages will be delivered by Wormhole server via native SDK. It is worth emphasizing that all of the messages are encrypted in the native SDK, only intended recipients could decrypt the message content.\u003c/p\u003e\n\n\n\u003cfigure class=\"border-0\"\u003e\n  \u003cimg class=\"img-fluid lazyload\" data-sizes=\"auto\" src=\"/images/inter-intra-messaging.png\"  width=\"1034\" height=\"458\" alt=\"`Wormhole` inter and intra service communication\"\u003e\n  \n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003e`Wormhole` inter and intra service communication\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"login\"\u003eLogin\u003c/h2\u003e\n\u003cp\u003eCurrently, only Google Oauth2 is supported for login.\u003c/p\u003e\n\u003ch3 id=\"get-google-oauth2-redirect-url\"\u003eGet Google Oauth2 Redirect URL\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003eGET /_matrix/client/unstable/org.matrix.msc2858/login/sso/redirect/oidc-google?redirectUrl={scheme}%3A%2F%2Fconnect\u0026amp;appid={appid}\u0026amp;access_token={access_token}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe client requests to login and instruct the user\u0026rsquo;s browser to navigate to the responded URL.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003escheme\u003c/code\u003e your app should monitor \u003ccode\u003escheme\u003c/code\u003e://connect after the user is authenticated\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eappid\u003c/code\u003e appid provided by Wormhole\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eaccess_token\u003c/code\u003e access token provided by Wormhole\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eReturns\u003c/strong\u003e:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003e200\u003c/code\u003e request was processed successfully.\u003c/li\u003e\n\u003c/ol\u003e\n"},{id:2,href:"https://www.wormholeim.org/docs/platform-api/",title:"Platform API",description:"Introduction of platform APIs",content:"\u003cp\u003eAlmost every APIs are well handled by our native SDKs, there\u0026rsquo;re still APIs that allow your application server to work with accounts and data related to your Wormhole application. The API lets you create accounts, set users' token programmatically so that you can boost your login conversion rate.\u003c/p\u003e\n\u003ch2 id=\"base-url\"\u003eBase URL\u003c/h2\u003e\n\u003cp\u003eEvery application has its unique base url. For now, to join Wormhole and get an app ID, app token, and a base URL, please email to \u0026ldquo;p.wormhole.im@gmail.com\u0026rdquo;. The format of the base URL used for the Platform API is\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehttps://api-{app id}.wormholeim.org\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"headers\"\u003eHeaders\u003c/h2\u003e\n\u003cp\u003eAll of the platform APIs should include the following headers\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eContent-Type: application/json; charset=utf8\nX-App-ID: {App ID}\nX-App-Token: {App Token}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"bulk-insert-accounts\"\u003eBulk insert accounts\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003ePOST /v1/accounts/\nContent-Type: application/json; charset=utf8\nX-App-ID: {App ID}\nX-App-Token: {App Token}\n\n{\n  \u0026quot;user_list\u0026quot;: [\n    {\n      \u0026quot;user_id\u0026quot;: \u0026quot;{user_id}\u0026quot;,\n      \u0026quot;display_name\u0026quot;: \u0026quot;{display_name}\u0026quot;,\n      \u0026quot;avatar\u0026quot;: \u0026quot;{avatar_url}\u0026quot;,\n    }\n  ]\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe account API allows you to create multiple accounts at the same time. Note that a single call can comprise as many as \u003ccode\u003e100\u003c/code\u003e accounts.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003euser_id\u003c/code\u003e is the ID of the user in your app. The user_id MUST be unique within your app.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edisplay_name\u003c/code\u003e should be unique within your app also to prevents users from misidentifying\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eavatar_url\u003c/code\u003e url of avatar for the user\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eReturns\u003c/strong\u003e:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003e200\u003c/code\u003e request was processed successfully.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e400\u003c/code\u003e missing parameter.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e413\u003c/code\u003e rate limit exceeded. Too many requests.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003e{\n  \u0026quot;success\u0026quot;: [\n    {\n      \u0026quot;user_id\u0026quot;: \u0026quot;{user_id}\u0026quot;,\n      \u0026quot;wormhole_id\u0026quot;: \u0026quot;{wormhole_id}\u0026quot;,\n      \u0026quot;access_token\u0026quot;: \u0026quot;{access_token}\u0026quot;\n    }\n  ]\n}\n\u003c/code\u003e\u003c/pre\u003e\u003col\u003e\n\u003cli\u003e\u003ccode\u003euser_id\u003c/code\u003e is the ID of the user in your app.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewormhole_id\u003c/code\u003e is the user id in Wormhole\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eaccess_token\u003c/code\u003e is used to login Wormhole. You should pass access_token to native SDK.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"disable-user\"\u003eDisable User\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003ePUT /v1/accounts/:wormhole_id\nAuthorization: Basic {basic_auth}\nX-PKG-NAME: {package_name}\nX-PKG-TOKEN: {package_token}\n\n{\n  \u0026quot;status\u0026quot; : \u0026quot;{status}\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDisable the user account by Wormhole ID. Note that you can still enable the account in the future.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003estatus\u003c/code\u003e changes between \u003ccode\u003eenable\u003c/code\u003e and \u003ccode\u003edisable\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eReturns\u003c/strong\u003e:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003e200\u003c/code\u003e account status successfully changed.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e404\u003c/code\u003e account not found.\u003c/li\u003e\n\u003c/ol\u003e\n"},{id:3,href:"https://www.wormholeim.org/docs/",title:"Specification",description:"Specification Wormhole.",content:""},];index.add(docs);userinput.addEventListener('input',show_results,true);suggestions.addEventListener('click',accept_suggestion,true);function show_results(){var value=this.value;var results=index.search(value,5);var entry,childs=suggestions.childNodes;var i=0,len=results.length;suggestions.classList.remove('d-none');results.forEach(function(page){entry=document.createElement('div');entry.innerHTML='<a href><span></span><span></span></a>';a=entry.querySelector('a'),t=entry.querySelector('span:first-child'),d=entry.querySelector('span:nth-child(2)');a.href=page.href;t.textContent=page.title;d.textContent=page.description;suggestions.appendChild(entry);});while(childs.length>len){suggestions.removeChild(childs[i])}}
function accept_suggestion(){while(suggestions.lastChild){suggestions.removeChild(suggestions.lastChild);}
return false;}}());